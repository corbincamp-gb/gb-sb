@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SkillBridge.CMS.ViewModel.EditGroupViewModel

@{
    ViewBag.Title = "Edit Group";
}

<h1>Group @Model.Group_Id</h1>


<div class="row">
    <div class="col-md-4" id="form-col">
        <form method="post">
            <input asp-for="Group_Id" type="hidden" />
            <div class="form-group">
                <label asp-for="Title"></label>
                <input asp-for="Title" id="Title" class="form-control" data-toggle="tooltip" title="Title of Opportunitiy Group Map Pin" />
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label asp-for="Lat"></label>
                        <input asp-for="Lat" id="Lat" class="form-control" data-toggle="tooltip" title="Latitude of Opportunitiy Group Map Pin" />
                    </div>
                    <div class="col">
                        <label asp-for="Long"></label>
                        <input asp-for="Long" id="Long" class="form-control" data-toggle="tooltip" title="Longitude of Opportunitiy Group Map Pin" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <button id="update-btn" type="submit" class="btn btn-primary btn-block" style="display:none;">Update</button>
            </div>
        </form>
        <div class="card">
            <div class="card-header">
                <h4>Geocode Address</h4>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <div class="row">
                        <div class="col">
                            <p>This will replace the current latitude and longitude values above.</p>
                            <label asp-for="Address" style="display:none;"></label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <input asp-for="Address" id="Address" class="form-control mb-2" data-toggle="tooltip" title="Address to Geocode to Lat/Long Coordinates" placeholder="Enter Address" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <button type="button" class="btn btn-success btn-block" id="geocode-btn" title="Click to Convert Address to Latitude and Longitude" style="color:#fff;">Geocode</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>        
    </div>
    <div class="col-md-8" id="map-col">
        <div id="map-container" style="width:100%;height:400px;"></div>
    </div>
</div>
<!--<div class="row">
    <div class="col">
        <button class="btn btn-success" id="map-btn" title="Click to View/Change Map Pin Location" style="color:#fff;" onclick="DisplayGoogleMap()"><i class="fa fa-edit fa-fw"></i>&nbsp;Edit</button>
    </div>
</div>-->




@section Scripts {
    <script type="text/javascript">
        var table;
        $('.leftmenutrigger').on('click', function (e) {
            setTimeout(ResizeTable, 500);
        });
        function ResizeTable() {
            table.columns.adjust().draw();
        }
        $(document).resize(function () {
            ResizeTable();
        });
        $(document).ready(function () {
            if ($('#example').length > 0) {
                table = $("#example").DataTable({
                    "processing": false, // for show progress bar
                    "serverSide": false, // for process server side
                    "filter": true, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    responsive: true,
                    "autoWidth": false,
                    "bAutoWidth": false,
                    "order": [
                        [3, 'asc']
                    ],
                    "columnDefs": [{
                        "targets": 0,
                        "visible": false,
                        "searchable": false,
                        "width": "2%"
                    }]
                });

                // Recalc column widths on paging
                table.on('page.dt', function () {
                    //table.columns.adjust()
                    table.responsive.recalc();
                });
            }

            $("#geocode-btn").click(function () {
                if ($("#Address").val() != "" && $("#Address").val() != "Enter Address") {
                    geocoder = new google.maps.Geocoder();
                    geocodeAddress(geocoder, map);
                    $("#Address").removeAttr("placeholder");
                }
                else {
                    alert("Please enter an address to geocode!")
                }
            });

            DisplayGoogleMap();
        });

        var map;
        var marker;
        var geocoder;
        var markers = [];

        function DisplayGoogleMap() {
            //$("#map-btn").css("display", "none");
            $("#update-btn").css("display", "block");

            $("#form-col").addClass("col-md-4");
            $("#map-col").css("display", "block");

            //Set the Latitude and Longitude of the Map
            var myAddress = new google.maps.LatLng(@Model.Lat, @Model.Long);

            //Create Options or set different Characteristics of Google Map
            var mapOptions = {
                center: myAddress,
                zoom: 8,
                mapTypeId: google.maps.MapTypeId.SATTELITE
            };

            //Display the Google map in the div control with the defined Options
            map = new google.maps.Map(document.getElementById("map-container"), mapOptions);

            //Set Marker on the Map
            marker = new google.maps.Marker({
                position: myAddress,
            });

            marker.setMap(map);
            markers.push(marker);

            google.maps.event.addListener(map, 'click', function(e) {
                PlaceMarker(e.latLng, map);
            });
        }

        function PlaceMarker(position, map)
        {
            RemoveAllMarkers();

            marker.setMap(null);

            marker = new google.maps.Marker({
                position: position,
                map: map
            });

            map.panTo(position);
            markers.push(marker);

            $("#Lat").val(position.lat);
            $("#Long").val(position.lng);

            //console.log("should update lat/long to " + position.lat + " / " + position.lng);
        }

        function geocodeAddress(geocoder, resultsMap) {
            //alert("gecode address called");
            const address = document.getElementById("Address").value;
            geocoder
                .geocode({ address: address })
                .then(({ results }) => {
                    RemoveAllMarkers();

                    resultsMap.setCenter(results[0].geometry.location);
                    marker = new google.maps.Marker({
                        map: resultsMap,
                        position: results[0].geometry.location,
                    });
                    markers.push(marker);

                    $("#Lat").val(results[0].geometry.location.lat);
                    $("#Long").val(results[0].geometry.location.lng);
                })
                .catch((e) =>
                    alert("Geocode was not successful for the following reason: " + e)
                );
        }

        function RemoveAllMarkers() {
            HideMarkers();
            markers = [];
        }

        function HideMarkers() {
            SetMapOnAll(null);
        }

        // Sets the map on all markers in the array.
        function SetMapOnAll(map) {
            for (let i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

    </script>
}

