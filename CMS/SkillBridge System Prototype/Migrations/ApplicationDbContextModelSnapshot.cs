// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillBridge_System_Prototype.Data;

namespace SkillBridge_System_Prototype.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.DeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryMethods");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.JobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobFamilies");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.OpportunityTrainingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OpportunityId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("OpportunityTrainingPlans");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParticipationPopulations");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramAdditionDeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Delivery_Method_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsDeliveryMethod");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramAdditionJobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Job_Family_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsJobFamily");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramAdditionParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Participation_Population_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsParticipationPopulation");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramAdditionService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Service_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsService");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramDeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Delivery_Method_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramDeliveryMethod");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramJobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Job_Family_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramJobFamily");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Participation_Population_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramParticipationPopulation");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.PendingProgramService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Pending_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Service_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramService");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramDeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Delivery_Method_Id")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Program_Id");

                    b.ToTable("ProgramDeliveryMethod");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramJobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Job_Family_Id")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Program_Id");

                    b.ToTable("ProgramJobFamily");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Participation_Population_Id")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Program_Id");

                    b.ToTable("ProgramParticipationPopulation");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Service_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Program_Id");

                    b.ToTable("ProgramService");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("State_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Program_Id");

                    b.ToTable("ProgramStates");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramTrainingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingPlanId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.HasIndex("TrainingPlanId1");

                    b.ToTable("ProgramTrainingPlans");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.QuestionPro.QPPdf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Pdf")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<string>("ZohoTicketId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QPPdfs");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.QuestionPro.QPResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Duplicate")
                        .HasColumnType("bit");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<string>("ResponseStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeTaken")
                        .HasColumnType("int");

                    b.Property<string>("ZohoTicketId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QPResponses");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.QuestionPro.QPResponseQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QPResponseQuestions");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.QuestionPro.QPResponseQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("ValueDynamicExplodeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueFileLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueScale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValueWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("QPResponseQuestionAnswers");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.QuestionProPdfModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZohoTicketId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestionProPdfModels");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_APIState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpiresIn")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("APIState");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AuditDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_Mou", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_OSD")
                        .HasColumnType("bit");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mous");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_Opportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Admin_Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Deactivated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Program_Initiated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Delivery_Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer_Poc_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer_Poc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment_Dates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("For_Spouses")
                        .HasColumnType("bit");

                    b.Property<int>("Group_Id")
                        .HasColumnType("int");

                    b.Property<string>("Installation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Job_Families")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jobs_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<int>("Legacy_Opportunity_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Links_To_Prospective_Jobs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locations_Of_Prospective_Jobs_By_State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<DateTime>("Mou_Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mou_Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Mous")
                        .HasColumnType("bit");

                    b.Property<bool>("Multiple_Locations")
                        .HasColumnType("bit");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Locations")
                        .HasColumnType("int");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("Opportunity_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Id")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Eligibility_Factors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participation_Populations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prospective_Job_Labor_Demand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Support_Cohorts")
                        .HasColumnType("bit");

                    b.Property<string>("Target_Mocs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Training_Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opportunities");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_OpportunityGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Group_Id")
                        .HasColumnType("int");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<int>("Opportunity_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Opportunity_Id");

                    b.ToTable("OpportunityGroups");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Deactivated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_MOU_Parent")
                        .HasColumnType("bit");

                    b.Property<int>("Legacy_MOU_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<int>("Mou_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Type")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parent_Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poc_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poc_First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poc_Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poc_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("States_Of_Program_Delivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_PendingOpportunityAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Program_Initiated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Delivery_Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer_Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer_Poc_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment_Dates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("For_Spouses")
                        .HasColumnType("bit");

                    b.Property<int>("Group_Id")
                        .HasColumnType("int");

                    b.Property<string>("Installation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Job_Families")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jobs_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Last_Admin_Action_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Admin_Action_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Admin_Action_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<int>("Legacy_Opportunity_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Links_To_Prospective_Jobs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locations_Of_Prospective_Jobs_By_State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<bool>("Mous")
                        .HasColumnType("bit");

                    b.Property<bool>("Multiple_Locations")
                        .HasColumnType("bit");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Locations")
                        .HasColumnType("int");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<int>("Opportunity_Id")
                        .HasColumnType("int");

                    b.Property<string>("Opportunity_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Id")
                        .HasColumnType("int");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Eligibility_Factors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participation_Populations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pending_Change_Status")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prospective_Job_Labor_Demand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rejection_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Requires_OSD_Review")
                        .HasColumnType("bit");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Support_Cohorts")
                        .HasColumnType("bit");

                    b.Property<string>("Target_Mocs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Training_Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("PendingOpportunityAdditions");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_PendingOpportunityChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Program_Initiated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Delivery_Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer_Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer_Poc_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment_Dates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("For_Spouses")
                        .HasColumnType("bit");

                    b.Property<int>("Group_Id")
                        .HasColumnType("int");

                    b.Property<string>("Installation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Job_Families")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jobs_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Last_Admin_Action_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Admin_Action_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Admin_Action_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<int>("Legacy_Opportunity_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Links_To_Prospective_Jobs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locations_Of_Prospective_Jobs_By_State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<bool>("Mous")
                        .HasColumnType("bit");

                    b.Property<bool>("Multiple_Locations")
                        .HasColumnType("bit");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Locations")
                        .HasColumnType("int");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<int>("Opportunity_Id")
                        .HasColumnType("int");

                    b.Property<string>("Opportunity_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Id")
                        .HasColumnType("int");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Eligibility_Factors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participation_Populations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pending_Change_Status")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prospective_Job_Labor_Demand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rejection_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Requires_OSD_Review")
                        .HasColumnType("bit");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Support_Cohorts")
                        .HasColumnType("bit");

                    b.Property<string>("Target_Mocs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Training_Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("PendingOpportunityChanges");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_PendingOrganizationChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Last_Admin_Action_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Admin_Action_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Admin_Action_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Id")
                        .HasColumnType("int");

                    b.Property<int>("Organization_Type")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pending_Change_Status")
                        .HasColumnType("int");

                    b.Property<string>("Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poc_First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poc_Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poc_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rejection_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Requires_OSD_Review")
                        .HasColumnType("bit");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PendingOrganizationChanges");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_PendingProgramAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Admin_Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Authorized")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Delivery_Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment_Dates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("For_Spouses")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Consent")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Intake")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Multiple_Locations")
                        .HasColumnType("bit");

                    b.Property<string>("Intake_Form_Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Job_Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Last_Admin_Action_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Admin_Action_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Admin_Action_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Legacy_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Lhn_Intake_Ticket_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lhn_Location_Ticket_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Location_Details_Available")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Mou_Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Mou_Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mou_Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("Opportunity_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Id")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participation_Populations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pending_Change_Status")
                        .HasColumnType("int");

                    b.Property<int>("Program_Duration")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Program_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Program_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Public_Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Public_Poc_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qp_Intake_Submission_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qp_Location_Submission_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rejection_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reporting_Form_2020")
                        .HasColumnType("bit");

                    b.Property<bool>("Requires_OSD_Review")
                        .HasColumnType("bit");

                    b.Property<string>("Services_Supported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("States_Of_Program_Delivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Support_Cohorts")
                        .HasColumnType("bit");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditions");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_PendingProgramChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Admin_Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Authorized")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Delivery_Method")
                        .HasColumnType("int");

                    b.Property<string>("Enrollment_Dates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("For_Spouses")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Consent")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Intake")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Multiple_Locations")
                        .HasColumnType("bit");

                    b.Property<string>("Intake_Form_Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Job_Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Last_Admin_Action_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Admin_Action_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Admin_Action_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Legacy_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Lhn_Intake_Ticket_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lhn_Location_Ticket_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Location_Details_Available")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Mou_Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Mou_Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mou_Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("Opportunity_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Id")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participation_Populations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pending_Change_Status")
                        .HasColumnType("int");

                    b.Property<int>("Program_Duration")
                        .HasColumnType("int");

                    b.Property<int>("Program_Id")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Program_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Program_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Public_Poc_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Public_Poc_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qp_Intake_Submission_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qp_Location_Submission_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rejection_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reporting_Form_2020")
                        .HasColumnType("bit");

                    b.Property<bool>("Requires_OSD_Review")
                        .HasColumnType("bit");

                    b.Property<string>("Services_Supported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("States_Of_Program_Delivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Support_Cohorts")
                        .HasColumnType("bit");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramChanges");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Admin_Poc_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Poc_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_Authorized")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Deactivated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Delivery_Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enrollment_Dates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("For_Spouses")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Consent")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Intake")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_Multiple_Locations")
                        .HasColumnType("bit");

                    b.Property<string>("Intake_Form_Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Job_Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Legacy_Program_Id")
                        .HasColumnType("int");

                    b.Property<int>("Legacy_Provider_Id")
                        .HasColumnType("int");

                    b.Property<string>("Lhn_Intake_Ticket_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lhn_Location_Ticket_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Location_Details_Available")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Mou_Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Mou_Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mou_Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("Opportunity_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organization_Id")
                        .HasColumnType("int");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participation_Populations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Program_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Program_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Program_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Public_Poc_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Public_Poc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qp_Intake_Submission_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qp_Location_Submission_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reporting_Form_2020")
                        .HasColumnType("bit");

                    b.Property<string>("Services_Supported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("States_Of_Program_Delivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Support_Cohorts")
                        .HasColumnType("bit");

                    b.Property<string>("Updated_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Organization_Id");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_SiteConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NotificationHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SiteConfiguration");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.InstructionalMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOther")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InstructionalMethods");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CredentialsEarned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradingRubric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionalModules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BreakdownCount")
                        .HasColumnType("int");

                    b.Property<int>("TrainingPlanLengthId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhoDelivers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanLengthId");

                    b.ToTable("TrainingPlans");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlanInstructionalMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstructionalMethodId")
                        .HasColumnType("int");

                    b.Property<string>("OtherText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstructionalMethodId");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("TrainingPlanInstructionalMethods");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlanLength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TrainingPlanLengths");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlanTimeBreakdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("TrainingPlanBreakdowns");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillBridge_System_Prototype.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.OpportunityTrainingPlan", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan", "TrainingPlan")
                        .WithMany()
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramDeliveryMethod", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.SB_Program", null)
                        .WithMany("ProgramDeliveryMethods")
                        .HasForeignKey("Program_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramJobFamily", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.SB_Program", null)
                        .WithMany("ProgramJobFamilies")
                        .HasForeignKey("Program_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramParticipationPopulation", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.SB_Program", null)
                        .WithMany("ProgramParticipationPopulations")
                        .HasForeignKey("Program_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramService", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.SB_Program", null)
                        .WithMany("ProgramServices")
                        .HasForeignKey("Program_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramState", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.SB_Program", null)
                        .WithMany("ProgramStates")
                        .HasForeignKey("Program_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.ProgramTrainingPlan", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan", null)
                        .WithMany("ProgramTrainingPlans")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan", "TrainingPlan")
                        .WithMany()
                        .HasForeignKey("TrainingPlanId1");
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_OpportunityGroup", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.SB_Opportunity", "SB_Opportunity")
                        .WithMany()
                        .HasForeignKey("Opportunity_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.SB_Program", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.SB_Organization", "SB_Organization")
                        .WithMany()
                        .HasForeignKey("Organization_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlanLength", "TrainingPlanLength")
                        .WithMany()
                        .HasForeignKey("TrainingPlanLengthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlanInstructionalMethod", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.TrainingPlans.InstructionalMethod", "InstructionalMethod")
                        .WithMany()
                        .HasForeignKey("InstructionalMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan", null)
                        .WithMany("TrainingPlanInstructionalMethods")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlanTimeBreakdown", b =>
                {
                    b.HasOne("SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan", null)
                        .WithMany("TrainingPlanBreakdowns")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
