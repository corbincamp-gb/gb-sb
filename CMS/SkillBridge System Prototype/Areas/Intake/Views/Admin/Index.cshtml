@model IntakeForm.Models.View.Admin.AdminSearchModel
@{
    ViewData["Title"] = "Intake Form Admin";

    var results = (List<IntakeForm.Models.Data.Forms.Entry>)ViewBag.Results;
}

@section Breadcrumb {
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <li class="breadcrumb-item"><a href="/intake/admin">Manage</a></li>
    <li class="breadcrumb-item">Intake Forms</li>
}

<div class="alert alert-primary" role="alert">
    <div class="h5">Filter Criteria for Intake Forms</div>
    @using (Html.BeginForm("Index", "Admin", FormMethod.Post, new { area = "Intake", id = "intake", @enctype = "multipart/form-data" }))
    {
        <input type="hidden" id="SortBy" name="SortBy" value="@(Model.SortBy)" />
        <input type="hidden" id="SortOrder" name="SortOrder" value="@(Model.SortOrder)" />
        <div class="row mt-2">
            <div class="col-4">
                <label for="ZohoTicketId" class="form-label">Ticket ID</label>
                <input type="text" class="form-control" id="ZohoTicketId" name="ZohoTicketId" value="@Model.ZohoTicketId" />
            </div>
            <div class="col-4">
                <label for="Organization" class="form-label">Organization Name</label>
                <input type="text" class="form-control" id="Organization" name="Organization" value="@Model.Organization" />
            </div>
            <div class="col-4">
                <label for="EntryStatusId" class="form-label">Application Status</label>
                <select class="form-control" id="EntryStatusId" name="EntryStatusId">
                    <!option value="">[All]</!option>
                    @foreach (var status in System.Enum.GetValues<IntakeForm.Models.Enumerations.EntryStatus>())
                    {
                        <!option value="@((int)status)" @(Model.EntryStatusId.GetValueOrDefault() == (int)status ? "selected" : String.Empty)>@Html.Raw(SkillBridge_System_Prototype.Util.Global.GlobalFunctions.GetEntryStatus((int)status))</!option>
                    }
                </select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-3">
                <label for="LastUpdatedStartingOn" class="form-label">Last Updated From</label>
                <input type="date" class="form-control" id="LastUpdatedStartingOn" name="LastUpdatedStartingOn" value="@(Model.LastUpdatedStartingOn.HasValue ? Model.LastUpdatedStartingOn.Value.ToString("yyyy-MM-dd") : String.Empty)" />
            </div>
            <div class="col-3">
                <label for="LastUpdatedEndingOn" class="form-label">Last Updated To</label>
                <input type="date" class="form-control" id="LastUpdatedEndingOn" name="LastUpdatedEndingOn" value="@(Model.LastUpdatedEndingOn.HasValue ? Model.LastUpdatedEndingOn.Value.ToString("yyyy-MM-dd") : String.Empty)" />
            </div>
            <div class="col-3">
                <label for="SubmittedStartingOn" class="form-label">Submission Date From</label>
                <input type="date" class="form-control" id="SubmittedStartingOn" name="SubmittedStartingOn" value="@(Model.SubmittedStartingOn.HasValue ? Model.SubmittedStartingOn.Value.ToString("yyyy-MM-dd") : String.Empty)" />
            </div>
            <div class="col-3">
                <label for="SubmittedEndingOn" class="form-label">Submission Date To</label>
                <input type="date" class="form-control" id="SubmittedEndingOn" name="SubmittedEndingOn" value="@(Model.SubmittedEndingOn.HasValue ? Model.SubmittedEndingOn.Value.ToString("yyyy-MM-dd") : String.Empty)" />
            </div>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary" name="Action" value="Filter">Filter</button>
            <button type="submit" class="btn btn-danger" name="Action" value="Reset">Reset</button>
        </div>
        @Html.AntiForgeryToken()
    }
</div>

<div class="text-end small">Number of Results: @(results.Count().ToString("0"))</div>

@if (results.Any())
{
<table class="table table-striped">
    <thead class="bg-table-header sticky-top">
            <tr data-formid="intake">
                <th><a href="#" class="text-white" data-sortby="ZohoTicketId">Ticket ID</a> @Html.Raw(Model.SortBy == "ZohoTicketId" ? $"<i class=\"fa fa-chevron-{(Model.SortOrder == "asc" ? "up" : "down")}\"></i>" : String.Empty)</th>
                <th><a href="#" class="text-white" data-sortby="OrganizationName">Organization</a> @Html.Raw(Model.SortBy == "OrganizationName" ? $"<i class=\"fa fa-chevron-{(Model.SortOrder == "asc" ? "up" : "down")}\"></i>" : String.Empty)</th>
                <th><a href="#" class="text-white" data-sortby="EntryStatusID">Application Status</a> @Html.Raw(Model.SortBy == "EntryStatusID" ? $"<i class=\"fa fa-chevron-{(Model.SortOrder == "asc" ? "up" : "down")}\"></i>" : String.Empty)</th>
                <th class="text-end"><a href="#" class="text-white" data-sortby="NumberOfPrograms">No. of Programs</a> @Html.Raw(Model.SortBy == "NumberOfPrograms" ? $"<i class=\"fa fa-chevron-{(Model.SortOrder == "asc" ? "up" : "down")}\"></i>" : String.Empty)</th>
                <th class="text-end"><a href="#" class="text-white" data-sortby="UpdatedDate">Last Updated</a> @Html.Raw(Model.SortBy == "UpdatedDate" ? $"<i class=\"fa fa-chevron-{(Model.SortOrder == "asc" ? "up" : "down")}\"></i>" : String.Empty)</th>
                <th class="text-end"><a href="#" class="text-white" data-sortby="SubmissionDate">Submission Date</a> @Html.Raw(Model.SortBy == "SubmissionDate" ? $"<i class=\"fa fa-chevron-{(Model.SortOrder == "asc" ? "up" : "down")}\"></i>" : String.Empty)</th>
            </tr>
    </thead>
    <tbody>
        @foreach (var result in results)
        {
            <tr>
                <td>@Html.Raw(result.ZohoTicketId)</td>
                <td>
                    @if (result.EntryStatusID >= (int)IntakeForm.Models.Enumerations.EntryStatus.Submitted)
                    {
                        <a href="/intake/admin/review/@(result.ZohoTicketId)">@Html.Raw(result.OrganizationName)</a>
                    }
                    else
                    {
                        @Html.Raw(result.OrganizationName)
                    }
                    <div class="small">EIN: @(result.Ein)</div>
                </td>
                <td>@Html.Raw(SkillBridge_System_Prototype.Util.Global.GlobalFunctions.GetEntryStatus(result.EntryStatusID))</td>
                <td class="text-end">@(result.NumberOfPrograms)</td>
                <td class="text-end">@(result.UpdatedDate.ToString("MM/dd/yyyy hh:mmtt"))</td>
                <td class="text-end">@(result.SubmissionDate.HasValue ? result.SubmissionDate.Value.ToString("MM/dd/yyyy hh:mmtt") : String.Empty)</td>
                </tr>
        }
    </tbody>
</table>
}
else
{
    <div class="alert alert-warning mt-2">
        No intake forms match the filter criteria.
    </div>
}


@section Scripts
{
    <script type="text/javascript">
    $(document).ready(function () {
    });
    </script>
}