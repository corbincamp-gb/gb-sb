@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Skillbridge.Business.Model.Db
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewBag.Title = "All Programs";
    ViewBag.IsAdmin = User.IsInRole("Admin");//var isAdmin = '@ViewBag.IsAdmin'
    ViewBag.IsAnalyst = User.IsInRole("Analyst");//var isAnalyst = '@ViewBag.IsAnalyst'
}

<h1>All Programs</h1>

<div class="row">
    <div class="col">
        @if (SignInManager.IsSignedIn(User))
        {
            if (User.IsInRole("Admin") || User.IsInRole("Analyst"))
            {
                <p>Below is a list of the approved SkillBridge programs—use this page to view and edit program details. Once submitted and approved by the SkillBridge team, programs appear on the SkillBridge Locations page.</p>
                <ul>
                    <li>To view program details, select the <i class="fa fa-eye fa-fw edit-btn" data-toggle="tooltip" title="View Record"></i></li>
                    <li>To edit program details, select the <i class="fa fa-edit fa-fw edit-btn" data-toggle="tooltip" title="Edit Record"></i></li>
                    <!--<li>When complete, a <i class="fa fa-exclamation-circle fa-fw changed-field" data-toggle="tooltip" title="Pending change"></i> will appear next to fields that have been edited</li>-->
                </ul>
            }
            else if (User.IsInRole("Service"))
            {
                <p>Use the search bar to locate programs based on their name, delivery method, etc.</p>
            }
        }
    </div>
</div>


    <div class="row">
        <div class="col">
            @if (SignInManager.IsSignedIn(User))
            {
                if (User.IsInRole("Admin") || User.IsInRole("Analyst"))
                {
                    <a class="btn btn-primary mb-3" asp-controller="Programs" asp-action="CreateProgram">Add New Program</a>
                }
                if (User.IsInRole("Admin") || User.IsInRole("Analyst") || User.IsInRole("Service"))
                {
                    <a id="download-btn" class="btn btn-success mb-3 d-inline-block" asp-action="DownloadCSV">Download Programs CSV</a>
                }
            }
        </div>
    </div>

    <table id="example" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th></th>
                <th>Active</th>
                <th>Program/Program Office/Agency</th>
                <th>Organization</th>
                <th>Admin Poc Name</th>
                <th>Admin Poc Email</th>
                <th>Admin Poc Phone</th>
                <th>Delivery Method</th>
                <th>Program Duration</th>
                <th>Job Family</th>
                <th>Services Supported</th>
                <!--<th>Program Status</th>-->
                <th>Public Poc Name</th>
                <th>Public Poc Email</th>
            </tr>
        </thead>
    </table>


@section Scripts {
    <script type="text/javascript">
        var table;
        $('.leftmenutrigger').on('click', function (e) {
            setTimeout(ResizeTable, 500);
        });
        function ResizeTable() {
            table.columns.adjust().draw();
        }
        $(document).resize(function () {
            ResizeTable();
        });
        $(document).ready(function () {
            if ($('#example').length > 0) {
                /*table = $("#example").DataTable({
                    dom: 'Bfrtip',
                    buttons: [
                        {
                            extend: 'copy', className: 'dtBtn',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                            }
                        },
                        {
                            extend: 'csv', className: 'dtBtn',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                            }
                        },
                        {
                            extend: 'excel', className: 'dtBtn',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                            }
                        }
                    ],
                    "processing": false, // for show progress bar
                    "serverSide": false, // for process server side
                    "filter": true, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    responsive: true,
                    "autoWidth": true,
                    "bAutoWidth": true,
                    "order": [
                        [2, 'asc']
                    ],
                    "columnDefs": [
                        {
                            "targets": 0,
                            "width": "60px",
                            "orderable": false
                        },
                        {
                            "targets": 1,
                            "width": "60px",
                            "orderable": false
                        },
                        {
                            "targets": 2,
                            "width": "200px",
                            "render": $.fn.dataTable.render.ellipsis()
                        }
                    ]
                });

                // Recalc column widths on paging
                table.on('page.dt', function () {
                    //table.columns.adjust()
                    table.responsive.recalc();
                });*/

                table = $("#example").DataTable({
                    dom: 'Bfrtip',
                    /*buttons: [
                        {
                            extend: 'copy', className: 'dtBtn',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                            }
                        },
                        {
                            extend: 'csv', className: 'dtBtn',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                            }
                        },
                        {
                            extend: 'excel', className: 'dtBtn',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                            }
                        }
                    ],*/
                    "processing": true, // for show progress bar
                    "serverSide": true, // for process server side
                    "stateSave": true,  // saves the position/page in the table by using localStorage in the browser
                    "ajax": {
                        "url": "/api/Oss/GetProgsData",
                        "type": "POST",
                        "datatype": "json"
                    },
                    "filter": true, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    "responsive": true,
                    "autoWidth": false,
                    "bAutoWidth": false,
                    /*"order": [
                        [2, 'asc']
                    ],*/
                    "columnDefs": [{
                        "targets": [0],
                        "visible": true,
                        "searchable": false
                    }],
                    "columns": [
                        {
                            /*
                             <th></th>
                            <th>Active</th>
                            <th>Program/Program Office/Agency</th>
                            <th>Organization</th>
                            <th>Admin Poc Name</th>
                            <th>Admin Poc Email</th>
                            <th>Admin Poc Phone</th>
                            <th>Delivery Method</th>
                            <th>Program Duration</th>
                            <th>Job Family</th>
                            <th>Services Supported</th>
                            <th>Program Status</th>
                            <th>Public Poc Name</th>
                            <th>Public Poc Email</th>
                             */
                            "data": "id", "render": function (data, row) {

                                var isAdmin = '@ViewBag.IsAdmin';
                                var isAnalyst = '@ViewBag.IsAnalyst';

                                console.log("isAdmin: " + isAdmin);
                                console.log("isAnalyst: " + isAnalyst);

                                if (isAdmin == "True" || isAnalyst == "True") {
                                    return "<a class='btn d-inline-block edit-btn' data-toggle='tooltip' title='View Program' asp-controller='Programs' asp-action='EditProgram' asp-route-id='" + data + "' asp-route-edit='false' aria-label='View Program'><i class='fa fa-eye fa-fw'></i></a><a class='btn d-inline-block edit-btn' data-toggle='tooltip' title='Edit Program' asp-controller='Programs' asp-action='EditProgram' asp-route-id='" + data + "' asp-route-edit='true' aria-label='Edit Program'><i class='fa fa-edit fa-fw'></i></a>";
                                }
                                else {
                                    return "<a class='btn d-inline-block edit-btn' data-toggle='tooltip' title='View Program' asp-controller='Programs' asp-action='EditProgram' asp-route-id='" + data + "' asp-route-edit='false' aria-label='View Program'><i class='fa fa-eye fa-fw'></i></a>";
                                }

                            }
                        },
                        { "data": "is_Active", "name": "Is_Active", "autoWidth": true },
                        { "data": "program_Name", "name": "Program_Name", "autoWidth": true },
                        { "data": "organization_Name", "name": "Organization_Name", "autoWidth": true },
                        {
                            "data": "admin_Poc_First_Name", "name": "Admin_Poc_First_Name", "render": function (data, row) {
                                return data + row[4];
                            }
                        },
                        { "data": "admin_Poc_Email", "name": "Admin_Poc_Email", "autoWidth": true },
                        { "data": "admin_Poc_Phone", "name": "Admin_Poc_Phone", "autoWidth": true },
                        { "data": "delivery_Method", "name": "Delivery_Method", "autoWidth": true },
                        {
                            "data": "program_Duration", "name": "Program_Duration", "render": function (data, row) {
                                switch (data) {
                                    case 0:
                                        return "1 - 30 days";
                                    case 1:
                                        return "31 - 60 days";
                                    case 2:
                                        return "61 - 90 days";
                                    case 3:
                                        return "91 - 120 days";
                                    case 4:
                                        return "121 - 150 days";
                                    case 5:
                                        return "151 - 180 days";
                                    case 6:
                                        return "Individually Developed – not to exceed 40 hours";
                                    case 7:
                                        return "Self-paced";
                                    default:
                                        return "Individually Developed – not to exceed 40 hours";
                                }
                            }
                        },
                        { "data": "job_Family", "name": "Job_Family", "autoWidth": true },
                        { "data": "services_Supported", "name": "Services_Supported", "autoWidth": true },
                        /*{ "data": "program_Status", "name": "Program_Status", "autoWidth": true },*/
                        { "data": "public_Poc_Name", "name": "Public_Poc_Name", "autoWidth": true },
                        { "data": "public_Poc_Email", "name": "Public_Poc_Email", "autoWidth": true }

                        /*
                        if (csv.GetField("Type") != "")
                        {
                            if(csv.GetField("Type") == "Profit")
                            {
                                newOrgType = 0;
                            }
                            else if (csv.GetField("Type") == "Non or Not for Profit")
                            {
                                newOrgType = 1;
                            }
                            else if (csv.GetField("Type") == "County/Municipality/City")
                            {
                                newOrgType = 2;
                            }
                            else if (csv.GetField("Type") == "State")
                            {
                                newOrgType = 3;
                            }
                            else if (csv.GetField("Type") == "Federal")
                            {
                                newOrgType = 4;
                            }
                        }
                        */
                        

                    ],
                    /*"columnDefs": [{
                        "targets": 0,
                        "width": "60px",
                        "orderable": false
                    },
                    {
                        "targets": 2,
                        "width": "200px",
                        "render": $.fn.dataTable.render.ellipsis()
                    }]*/
                    initComplete: function () {
                        var api = this.api();
                        api.$('td').click(function () {
                            //api.search(this.innerHTML).draw();
                        });

                        // Add data-sort on to cols that are missing it
                        /*$("tr td:nth-child(6)").each(function () {
                            var val = $(this).text();

                            var vals = val.split("/");

                            var day = vals[0];
                            var month = vals[1];
                            var year = vals[2];

                            var formattedDay = day.toLocaleString('en-US', {
                                minimumIntegerDigits: 2,
                                useGrouping: false
                            });
                            var formattedMonth = month.toLocaleString('en-US', {
                                minimumIntegerDigits: 2,
                                useGrouping: false
                            });
                            var formattedYear = year.toLocaleString('en-US', {
                                minimumIntegerDigits: 4,
                                useGrouping: false
                            });

                            $(this).attr("data-sort", formattedDay + formattedMonth + formattedYear);
                        });*/
                    }
                });

                // Recalc column widths on paging
                table.on('page.dt', function () {
                    //table.columns.adjust()
                    table.responsive.recalc();
                });
            }

            $("#download-btn").click(function (e) {
                $('#loader').css("display", "block");
                $('#loader-bg').css("display", "block");
                $('#loader-text').css("display", "block");
                $('#generating-file').css("display", "block");

                setCookie('programsDownloadStarted', "0", 100); //Expiration could be anything... As long as we reset the value
                setTimeout(checkDownloadCookie, 1000); //Initiate the loop to check the cookie.

                //console.log("downloadStarted: " + getCookie('downloadStarted'));
                //$('main').css("visibility", "hidden");
            });

            var downloadTimeout;
            var checkDownloadCookie = function () {
                //console.log("downloadStarted: " + getCookie('downloadStarted'));
                if (getCookie("programsDownloadStarted") == "1") {
                    setCookie("programsDownloadStarted", "false", 0); //Expiration could be anything... As long as we reset the value
                    HideLoader();
                } else {
                    downloadTimeout = setTimeout(checkDownloadCookie, 1000); //Re-run this function in 1 second.
                }
            };
        });
    </script>
}


