@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<Skillbridge.Business.Model.Db.OpportunityModel>

@{
    ViewBag.Title = "Group Opportunities";
}

<h1>All Opportunities for Group @ViewBag.GroupId</h1>

@if (Model.Any())
{
    <!--<a class="btn btn-primary mb-3" asp-controller="Opportunities" asp-action="CreateOpportunity">Add New Opportunity</a>-->

<table id="example" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
    <thead>
        <tr>
            <th>Id</th>
            <!--<th>Group Id</th>-->
            <th>Program/Program Office/Agency</th>
            <th>Installation</th>
            <th>City</th>
            <th>State</th>
            <th>Zip</th>
            <th>Opportunity Url</th>
            <th>Date Program Initiated</th>
            <th>Date Created</th>
            <th>Date Updated</th>
            <th>Employer Poc Name</th>
            <th>Employer Poc Email</th>
            <th>Training Duration</th>
            <th>Service</th>
            <th>Delivery Method</th>
            <th>Multiple Locations</th>
            <th>Program Type</th>
            <th>Job Families</th>
            <th>Participation Populations</th>
            <th>Support Cohorts</th>
            <th>Enrollment Dates</th>
            <th>Mous</th>
            <th>Num Locations</th>
            <th>Lat</th>
            <th>Long</th>
            <th>Nationwide</th>
            <th>Online</th>
            <th>Summary Description</th>
            <th>Jobs Description</th>
            <th>Links To Prospective Jobs</th>
            <th>Locations Of Prospective Jobs By State</th>
            <th>Salary</th>
            <th>Prospective Job Labor Demand</th>
            <th>Target Mocs</th>
            <th>Other Eligibility Factors</th>
            <th>Cost</th>
            <th>Other</th>
            <th>Notes</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var opp in Model)
            {
        <tr>
            <td>@opp.Id</td>
            <!--<td>opp.Group_Id</td>-->
            <td>@opp.Program_Name</td>
            <td>@opp.Installation</td>
            <td>@opp.City</td>
            <td>@opp.State</td>
            <td>@opp.Zip</td>
            <td>@opp.Opportunity_Url</td>
            <td>@opp.Date_Program_Initiated.ToString("MM/dd/yyyy")</td>
            <td>@opp.Date_Created.ToString("MM/dd/yyyy")</td>
            <td>@opp.Date_Updated.ToString("MM/dd/yyyy")</td>
            <td>@opp.Employer_Poc_Name</td>
            <td>@opp.Employer_Poc_Email</td>
            <td>@opp.Training_Duration</td>
            <td>@opp.Service</td>
            <td>@opp.Delivery_Method</td>
            <td>@opp.Multiple_Locations</td>
            <td>@opp.Program_Type</td>
            <td>@opp.Job_Families</td>
            <td>@opp.Participation_Populations</td>
            <td>@opp.Support_Cohorts</td>
            <td>@opp.Enrollment_Dates</td>
            <td>@opp.Mous</td>
            <td>@opp.Num_Locations</td>
            <td>@opp.Lat</td>
            <td>@opp.Long</td>
            <td>@opp.Nationwide</td>
            <td>@opp.Online</td>
            <td>@opp.Summary_Description</td>
            <td>@opp.Jobs_Description</td>
            <td>@opp.Links_To_Prospective_Jobs</td>
            <td>@opp.Locations_Of_Prospective_Jobs_By_State</td>
            <td>@opp.Salary</td>
            <td>@opp.Prospective_Job_Labor_Demand</td>
            <td>@opp.Target_Mocs</td>
            <td>@opp.Other_Eligibility_Factors</td>
            <td>@opp.Cost</td>
            <td>@opp.Other</td>
            <td>@opp.Notes</td>
        </tr>
            }
    </tbody>
</table>
}
else
{
<div class="card">
    <div class="card-header">
        No Group Opportunities Created Yet
    </div>
    <div class="card-body">
        <!--if (SignInManager.IsSignedIn(User))
        {
            if (User.IsInRole("Admin") || User.IsInRole("Analyst"))
            {
                <h5 class="card-title">
                    Use the button below to create an opportunity
                </h5>
                <a class="btn btn-primary" asp-controller="Opportunities" asp-action="CreateOpportunity">Create Opportunity</a>
            }
        }-->
    </div>
</div>
}

<!--<div class="row">
    <div class="col">
        <h2>Edit Group Location</h2>
        <input type="button" value="Click to Display Map" onclick="DisplayGoogleMap()" />
        <div id="myDiv" style="width:100%;height:400px;"></div>
    </div>
</div>-->

@section Scripts {
    <script type="text/javascript">
        var table;
        $('.leftmenutrigger').on('click', function (e) {
            setTimeout(ResizeTable, 500);
        });
        function ResizeTable() {
            table.columns.adjust().draw();
        }
        $(document).resize(function () {
            ResizeTable();
        });
        $(document).ready(function () {
            if ($('#example').length > 0) {
                table = $("#example").DataTable({
                    "processing": false, // for show progress bar
                    "serverSide": false, // for process server side
                    "filter": true, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    responsive: true,
                    "autoWidth": false,
                    "bAutoWidth": false,
                    "order": [
                        [1, 'asc']
                    ],
                    "columnDefs": [{
                        "targets": 0,
                        "visible": false,
                        "searchable": false,
                        "width": "2%"
                    },
                    {
                        targets: 1,
                        render: function (data, type, full, meta) {
                            return "<div class='text-wrap width-200'>" + data + "</div>";
                        }
                    }]
                });

                // Recalc column widths on paging
                table.on('page.dt', function () {
                    //table.columns.adjust()
                    table.responsive.recalc();
                });
            }
        });

        var map;
        var marker;

        function DisplayGoogleMap() {

            //Set the Latitude and Longitude of the Map
            var myAddress = new google.maps.LatLng(@ViewBag.Lat, @ViewBag.Long);

            //Create Options or set different Characteristics of Google Map
            var mapOptions = {
                center: myAddress,
                zoom: 15,
                minZoom: 15,
                mapTypeId: google.maps.MapTypeId.SATTELITE
            };

            //Display the Google map in the div control with the defined Options
            map = new google.maps.Map(document.getElementById("myDiv"), mapOptions);

            //Set Marker on the Map
            marker = new google.maps.Marker({
                position: myAddress,
            });

            marker.setMap(map);

            google.maps.event.addListener(map, 'click', function(e) {
                placeMarker(e.latLng, map);
              });
        }

        function placeMarker(position, map) {
            marker.setMap(null);

            marker = new google.maps.Marker({
              position: position,
              map: map
            });

            map.panTo(position);
          }

    </script>
}


