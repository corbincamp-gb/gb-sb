@{
    var trainingPlan = (SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan)ViewBag.TrainingPlan;
    var originalTrainingPlan = (SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlan)ViewBag.OriginalTrainingPlan;
    var trainingPlanLengthsList = (List<SkillBridge_System_Prototype.Models.TrainingPlans.TrainingPlanLength>)ViewBag.TrainingPlanLengthsList;
    var instructionalMethodsList = (List<SkillBridge_System_Prototype.Models.TrainingPlans.InstructionalMethod>)ViewBag.InstructionalMethodsList;
}


                    <div class="card">
                        <div class="card-header h5">Training Plan</div>
                        <div class="card-body">
                            <div class="h6 mb-0 pb-0 @(trainingPlan.Name != originalTrainingPlan.Name ? "text-danger" : String.Empty)">Name @Html.Raw(trainingPlan.Name != originalTrainingPlan.Name ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col d-flex align-items-center">
                                    @Html.Raw(originalTrainingPlan.Name)
                                </div>
                                <div class="col">
                                    <input type="text" id="Name" name="Name" value="@trainingPlan.Name" class="form-control" data-val="true" data-val-required="A name is required." data-toggle=" tooltip" title="What is the name of this training plan?" />
                                    <span class="text-danger" data-valmsg-for="Name" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                            <div class="h6 mb-0 pb-0 @(trainingPlan.JobTitle != originalTrainingPlan.JobTitle ? "text-danger" : String.Empty)">Job Title @Html.Raw(trainingPlan.JobTitle != originalTrainingPlan.JobTitle ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col d-flex align-items-center">
                                    @Html.Raw(originalTrainingPlan.JobTitle)
                                </div>
                                <div class="col">
                                    <input type="text" id="JobTitle" name="JobTitle" value="@trainingPlan.JobTitle" class="form-control" data-val="true" data-val-required="A job title is required." data-toggle=" tooltip" title="What is the job title associated with this training plan?" />
                                    <span class="text-danger" data-valmsg-for="JobTitle" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                            <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.Description != originalTrainingPlan.Description ? "text-danger" : String.Empty)">Description @Html.Raw(trainingPlan.Description != originalTrainingPlan.Description ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col d-flex align-items-center">
                                    @Html.Raw(originalTrainingPlan.Description)
                                </div>
                                <div class="col">
                                    <textarea id="Description" name="Description" class="form-control" data-val="true" data-val-required="A brief description of the job is required." data-toggle=" tooltip" title="Please provide a brief description of the above job.">@Html.Raw(trainingPlan.Description)</textarea>
                                    <span class="text-danger" data-valmsg-for="Description" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                            <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.TrainingPlanLengthId != originalTrainingPlan.TrainingPlanLengthId ? "text-danger" : String.Empty)">Training Plan Length @Html.Raw(trainingPlan.TrainingPlanLengthId != originalTrainingPlan.TrainingPlanLengthId ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col d-flex align-items-center">
                                    @Html.Raw(originalTrainingPlan.TrainingPlanLength.DisplayText)
                                </div>
                                <div class="col">
                                        <select id="TrainingPlanLengthId" name="TrainingPlanLengthId" class="form-control" data-val="true" data-val-required="The length of the training program is required.">
                                        @for (var i=0; i<trainingPlanLengthsList.Count; i++)
                                        {
                                            <!option value="@(trainingPlanLengthsList[i].Id)" @(trainingPlan.TrainingPlanLengthId == trainingPlanLengthsList[i].Id ? "selected" : String.Empty)>@Html.Raw(trainingPlanLengthsList[i].DisplayText)</!option>
                                        }
                                        </select>
                                    <span class="text-danger" data-valmsg-for="TrainingPlanLengthId" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                            <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.BreakdownCount != originalTrainingPlan.BreakdownCount || trainingPlan.TrainingPlanBreakdowns.Select(o => o.TrainingModuleTitle + o.LearningObjective + o.TotalHours.ToString("0")).ToList() != originalTrainingPlan.TrainingPlanBreakdowns.Select(o => o.TrainingModuleTitle + o.LearningObjective + o.TotalHours.ToString("0")).ToList() ? "text-danger" : String.Empty)">
                                Weekly Breakdown @Html.Raw(trainingPlan.BreakdownCount != originalTrainingPlan.BreakdownCount || trainingPlan.TrainingPlanBreakdowns.Select(o => o.TrainingModuleTitle + o.LearningObjective + o.TotalHours.ToString("0")).ToList() != originalTrainingPlan.TrainingPlanBreakdowns.Select(o => o.TrainingModuleTitle + o.LearningObjective + o.TotalHours.ToString("0")).ToList() ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)
                            </div>
                            <input type="hidden" id="BreakdownCount" name="BreakdownCount" value="@(trainingPlan.BreakdownCount)" />
                            <table class="table mt-2">
                                <thead>
                                    <tr>
                                        <th>Week</th>
                                        <th>Title of Training Module</th>
                                        <th>Learning Objective</th>
                                        <th>Total Hours</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < trainingPlan.TrainingPlanBreakdowns.Count; i++)
                                    {
                                        var originalBreakdown = originalTrainingPlan.TrainingPlanBreakdowns.FirstOrDefault(o => o.RowId == i + 1);
                                        var breakdown = trainingPlan.TrainingPlanBreakdowns.FirstOrDefault(o => o.RowId == i + 1);
                                        <tr class="table-borderless">
                                            <td rowspan="2" class="align-middle">@(i + 1) <input type="hidden" 
                                            id="TrainingPlanBreakdowns[@(i + 1)]__RowId"
                                            name="TrainingPlanBreakdowns[@(i + 1)].RowId" 
                                            value="@(breakdown.RowId)"/></td>
                                            <td>@Html.Raw(originalBreakdown?.TrainingModuleTitle ?? String.Empty)</td>
                                            <td>@Html.Raw(originalBreakdown?.LearningObjective ?? String.Empty)</td>
                                            <td>@Html.Raw(originalBreakdown?.TotalHours.ToString("0") ?? String.Empty)</td>
                                        </tr>
                                        <tr class="table-borderless border-bottom">
                                            <td>
                                                <input type="text" class="form-control"
                                            id="TrainingPlanBreakdowns[@(i + 1)]__TrainingModuleTitle"
                                            name="TrainingPlanBreakdowns[@(i + 1)].TrainingModuleTitle"
                                            data-val="true"
                                            data-val-required="The training module title for week @(i+1) is required."
                                            data-toggle="tooltip"
                                            title="Enter the training module title for week @(i+1)"
                                            value="@breakdown.TrainingModuleTitle" />
                                                <span class="text-danger field-validation-valid" data-valmsg-for="TrainingPlanBreakdowns[@(i + 1)].TrainingModuleTitle" data-valmsg-replace="true"></span>
                                            </td>
                                            <td>
                                                <input type="text" class="form-control"
                                            id="TrainingPlanBreakdowns[@(i + 1)]__LearningObjective"
                                            name="TrainingPlanBreakdowns[@(i + 1)].LearningObjective"
                                            data-val="true"
                                            data-val-required="The learning objective for week @(i+1) is required."
                                            data-toggle="tooltip"
                                            title="Enter the learning objective for week @(i+1)"
                                            value="@breakdown.LearningObjective" />
                                                <span class="text-danger field-validation-valid" data-valmsg-for="TrainingPlanBreakdowns[@(i + 1)].LearningObjective" data-valmsg-replace="true"></span>
                                            </td>
                                            <td>
                                                <input type="number" class="form-control"
                                            id="TrainingPlanBreakdowns[@(i + 1)]__TotalHours"
                                            name="TrainingPlanBreakdowns[@(i + 1)].TotalHours"
                                            style="width: 80px;"
                                            data-val="true"
                                            data-val-required="The total hours for week @(i+1) is required."
                                            data-toggle="tooltip"
                                            data-val-range="Total hours for week @(i+1) must be between 1 and 999."
                                            data-val-range-min="1" data-val-range-max="999"
                                            title="Enter the total hours for week @(i+1)"
                                            value="@breakdown.TotalHours" />
                                                <span class="text-danger field-validation-valid" data-valmsg-for="TrainingPlanBreakdowns[@(i + 1)].TotalHours" data-valmsg-replace="true"></span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.InstructionalModules != originalTrainingPlan.InstructionalModules ? "text-danger" : String.Empty)">Instructional Modules @Html.Raw(trainingPlan.InstructionalModules != originalTrainingPlan.InstructionalModules ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col d-flex align-items-center">
                                    @Html.Raw(originalTrainingPlan.InstructionalModules)
                                </div>
                                <div class="col">
                                    <textarea id="InstructionalModules" name="InstructionalModules" class="form-control" data-val="true" data-val-required="A list of each instructional module and its associated learning objective is required." data-toggle="tooltip" title="Please provide a list of each instructional module and its associated learning objective.">@Html.Raw(trainingPlan.InstructionalModules)</textarea>
                                    <span class="text-danger" data-valmsg-for="InstructionalModules" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                            <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.TrainingPlanInstructionalMethods != originalTrainingPlan.TrainingPlanInstructionalMethods ? "text-danger" : String.Empty)">Instructional Methods @Html.Raw(trainingPlan.GetTrainingPlanInstructionalMethods() != originalTrainingPlan.GetTrainingPlanInstructionalMethods() ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col">
                                    <ul>
                                    @foreach (var instructionalMethod in originalTrainingPlan.TrainingPlanInstructionalMethods)
                                    {
                                        <li>
                                            @Html.Raw(instructionalMethod.InstructionalMethod.DisplayText) 
                                            @(instructionalMethod.InstructionalMethod.IsOther ? $" - {instructionalMethod.OtherText}" : String.Empty)
                                        </li>
                                    }
                                    </ul>
                                </div>
                                <div class="col">
                                    @for (var i=0; i<instructionalMethodsList.Count; i++)
                                    {
                                        <div class="form-check mr-3">
                                            <label class="form-check-label font-weight-normal">
                                                <input type="checkbox" class="form-check-input" value="@(instructionalMethodsList[i].Id)" id="TrainingPlanInstructionalMethods__@(i)__InstructionalMethodId" name="TrainingPlanInstructionalMethods[].InstructionalMethodId" data-val="true" requiredgroup="true" data-msg="At least one instruction method is required" @(trainingPlan.TrainingPlanInstructionalMethods.Any(o => o.InstructionalMethodId == instructionalMethodsList[i].Id) ? "checked" : String.Empty) /> @Html.Raw(instructionalMethodsList[i].DisplayText)
                                            </label>
                                        </div>
                                        @if (instructionalMethodsList[i].IsOther)
                                        {
                                            <textarea id="TrainingPlanInstructionalMethods__@(i)__OtherText" name="TrainingPlanInstructionalMethods[].OtherText" class="form-control" data-toggle="tooltip" title="Please provide the other instruction method." data-val="true" requiredif="true" requiredif-dependentproperty="TrainingPlanInstructionalMethods__@(i)__InstructionalMethodId" requiredif-targetvalue="5" data-msg="Other instructional method is required">@(trainingPlan != null && trainingPlan.TrainingPlanInstructionalMethods != null && trainingPlan.TrainingPlanInstructionalMethods.Any(o => o.InstructionalMethodId == instructionalMethodsList[i].Id) ? trainingPlan.TrainingPlanInstructionalMethods.FirstOrDefault(o => o.InstructionalMethodId == instructionalMethodsList[i].Id).OtherText : String.Empty)</textarea>
                                            <span class="text-danger" data-valmsg-for="TrainingPlanInstructionalMethods[].OtherText" data-valmsg-replace="true"></span>
                                        }
                                    }
                                    <span class="text-danger" data-valmsg-for="TrainingPlanInstructionalMethods[].InstructionalMethodId" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                            <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.WhoDelivers != originalTrainingPlan.WhoDelivers ? "text-danger" : String.Empty)">Who Delivers @Html.Raw(trainingPlan.WhoDelivers != originalTrainingPlan.WhoDelivers ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col d-flex align-items-center">
                                    @Html.Raw(originalTrainingPlan.WhoDelivers)
                                </div>
                                <div class="col">
                    <textarea id="WhoDelivers" name="WhoDelivers" class="form-control" data-val="true" data-val-required="A description of who will be delivering training and their training credentials is required." data-toggle=" tooltip" title="Please describe in detail who will be delivering training and their training credentials.">@Html.Raw(trainingPlan.WhoDelivers)</textarea>
                    <span class="text-danger" data-valmsg-for="WhoDelivers" data-valmsg-replace="true"></span>
                                </div>
                            </div>                        
                            <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.GradingRubric != originalTrainingPlan.GradingRubric ? "text-danger" : String.Empty)">Grading Rubric @Html.Raw(trainingPlan.GradingRubric != originalTrainingPlan.GradingRubric ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                            <div class="row">
                                <div class="col d-flex align-items-center">
                                    @Html.Raw(originalTrainingPlan.GradingRubric)
                                </div>
                                <div class="col">
                                    <textarea id="GradingRubric" name="GradingRubric" class="form-control" data-val="true" data-val-required="The standardized grading rubric description is required." data-toggle="tooltip" title="Please describe the standardized grading rubric used to evaluate trainees.">@Html.Raw(trainingPlan.GradingRubric)</textarea>
                                    <span class="text-danger" data-valmsg-for="GradingRubric" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                                <div class="h6 mt-3 mb-0 pb-0 @(trainingPlan.CredentialsEarned != originalTrainingPlan.CredentialsEarned ? "text-danger" : String.Empty)">Credentials Earned @Html.Raw(trainingPlan.CredentialsEarned != originalTrainingPlan.CredentialsEarned ? "<i class='fa fa-exclamation-circle fa-fw'></i>" : String.Empty)</div>
                                <div class="row">
                                    <div class="col d-flex align-items-center">
                                        @Html.Raw(originalTrainingPlan.CredentialsEarned)
                                    </div>
                                    <div class="col">
                    <textarea id="CredentialsEarned" name="CredentialsEarned" class="form-control" data-val="true" data-val-required="A list of any credentials, certificate, or hours gained toward licenses and/or certifications upon completing training is required." data-toggle="tooltip" title="Please list any credentials, certificate, or hours gained toward licenses and/or certifications upon completing training.">@Html.Raw(trainingPlan.CredentialsEarned)</textarea>
                    <span class="text-danger" data-valmsg-for="CredentialsEarned" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                            </div>
                    </div>
